# Generated by Django 2.2.10 on 2022-12-11 13:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re
import uuid
import webmail.fields
import webmail.models
import webmail.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MailboxModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('emails', webmail.fields.CommaSeparatedEmailField(blank=True, help_text='Email/s related to the mailbox and used to associate them as mine', null=True, verbose_name='Email')),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mailbox',
                'verbose_name_plural': 'Mailboxes',
                'db_table': 'webmail_mailbox',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MessageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_id', models.IntegerField(blank=True, choices=[(0, 'Inbox'), (1, 'Sent'), (2, 'Spam'), (3, 'Trash')], db_index=True, default=None, null=True, verbose_name='Folder')),
                ('subject', models.CharField(max_length=1000, verbose_name='Subject')),
                ('message_id', models.CharField(max_length=255, verbose_name='Message ID')),
                ('original_email_headers', webmail.fields.JSONField(blank=True, editable=False, null=True, verbose_name='Original email headers')),
                ('from_me', models.BooleanField(default=False, verbose_name='From me')),
                ('from_email', models.CharField(max_length=254, validators=[webmail.validators.validate_email_with_name], verbose_name='From')),
                ('to', webmail.fields.CommaSeparatedEmailField(blank=True, null=True, verbose_name='To')),
                ('cc', webmail.fields.CommaSeparatedEmailField(blank=True, null=True, verbose_name='Cc')),
                ('bcc', webmail.fields.CommaSeparatedEmailField(blank=True, null=True, verbose_name='Bcc')),
                ('to_me', models.BooleanField(db_index=True, default=False, verbose_name='To me')),
                ('to_me_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_starred', models.BooleanField(db_index=True, default=False, verbose_name='Starred')),
                ('text_plain', models.TextField(blank=True, null=True, verbose_name='Text Plain')),
                ('html', models.TextField(blank=True, null=True, verbose_name='HTML')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('read_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Read at')),
                ('imported', models.BooleanField(default=False, verbose_name='Imported')),
                ('in_reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='webmail.MessageModel', verbose_name='In reply to')),
                ('mailbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='webmail.MailboxModel', verbose_name='Mailbox')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'webmail_message',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'webmail_tag',
            },
        ),
        migrations.CreateModel(
            name='WebmailUserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters and digits only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]+$', flags=re.RegexFlag(256), message='Enter a valid username. This value may contain only English letters and numbers.')], verbose_name='Username')),
                ('displayed_name', models.CharField(blank=True, help_text='Displayed name in admin panel. Keep it blank to display username only.', max_length=150, null=True, verbose_name='Displayed name')),
                ('last_time_password_changed', models.DateTimeField(blank=True, editable=False, help_text='Last time password was changed', null=True, verbose_name='Last time password changed')),
                ('is_2fa_enabled', models.BooleanField(db_index=True, default=False, help_text='Is 2 factor authentication enabled?', verbose_name='2FA')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('srp_group', models.IntegerField(blank=True, choices=[(1024, 1024), (1536, 1536), (2048, 2048), (3072, 3072), (4096, 4096), (6144, 6144), (8192, 8192)])),
                ('verifier', models.TextField(blank=True, max_length=1000, validators=[django.core.validators.RegexValidator('^[0-9a-f]+$', flags=re.RegexFlag(2), message='Value must be a hexadecimal number.')])),
                ('salt', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator('^[0-9a-f]+$', flags=re.RegexFlag(2), message='Value must be a hexadecimal number.')])),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name': 'Webmail User',
                'verbose_name_plural': 'Webmail Users',
                'db_table': 'webmail_webmailuser',
            },
        ),
        migrations.CreateModel(
            name='WebmailSessionModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Session key')),
                ('session_data', models.TextField(editable=False, verbose_name='Session data')),
                ('expire_date', models.DateTimeField(db_index=True, editable=False, verbose_name='Expire date')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last activity')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='webmail.WebmailUserModel')),
            ],
            options={
                'db_table': 'webmail_webmailsession',
            },
            managers=[
                ('objects', webmail.models.WebmailSessionManager()),
            ],
        ),
        migrations.CreateModel(
            name='UploadAttachmentSessionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_column='uuid', default=uuid.uuid1, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('message_obj_reference', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_session', to='webmail.MessageModel', verbose_name='message')),
            ],
            options={
                'verbose_name': 'Upload Attachment Session',
                'verbose_name_plural': 'Upload Attachment Sessions',
                'db_table': 'webmail_uploadattachmentsession',
            },
        ),
        migrations.CreateModel(
            name='SmtpServerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_email', models.EmailField(blank=True, default=None, help_text="Example: mailbot@yourdomain.com<br />'From' header to set for outgoing email.<br /><br />If you do not use this e-mail inbox for outgoing mail, this setting is unnecessary.<br />If you send e-mail without setting this, your 'From' header will'be set to match the setting `settings.WEBMAIL_DEFAULT_FROM_EMAIL`.", max_length=254, null=True, verbose_name='From email')),
                ('from_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='From name')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('port', models.PositiveIntegerField(default=25, help_text='(465 with SSL)', verbose_name='Port')),
                ('username', models.CharField(max_length=75, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=75, null=True, verbose_name='Password')),
                ('use_tls', models.BooleanField(default=False, verbose_name='Use TLS')),
                ('use_ssl', models.BooleanField(default=False, verbose_name='Use SSL')),
                ('mailbox', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='smtp_server', to='webmail.MailboxModel', verbose_name='Mailbox')),
            ],
            options={
                'verbose_name': 'SMTP Server',
                'verbose_name_plural': 'SMTP Servers',
                'db_table': 'webmail_smtpserver',
            },
        ),
        migrations.CreateModel(
            name='SendMailTaskModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_recipients', webmail.fields.CommaSeparatedEmailField()),
                ('multipart_mail_message', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')], db_index=True, default=2, verbose_name='Priority')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Queued'), (1, 'In progress'), (2, 'Completed'), (3, 'Failed'), (4, 'Cancelled')], db_index=True, default=0, verbose_name='Status')),
                ('num_deferred_times', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Number of times deferred')),
                ('scheduled_time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='The scheduled sending time')),
                ('last_sent_at', models.DateTimeField(blank=True, null=True)),
                ('mailbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_tasks', to='webmail.MailboxModel')),
            ],
            options={
                'verbose_name': 'Send Mail Task',
                'verbose_name_plural': 'Send Email Task Queue',
                'db_table': 'webmail_sendmailtask',
            },
        ),
        migrations.CreateModel(
            name='SendMailTaskLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('success', models.BooleanField(db_index=True)),
                ('exception_type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('exception_message', models.TextField(blank=True, null=True)),
                ('py_traceback', models.TextField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='webmail.SendMailTaskModel')),
            ],
            options={
                'verbose_name': 'Mail Sent Log',
                'verbose_name_plural': 'Mail Sent Logs',
                'db_table': 'webmail_sendmailtasklog',
                'ordering': ('sent_at',),
            },
        ),
        migrations.CreateModel(
            name='Pop3MailServerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, default=True, help_text='Check this e-mail inbox for new e-mail messages during polling cycles.  This checkbox does not have an effect upon whether mail is collected here when this mailbox receives mail from a pipe, and does not affect whether e-mail messages can be dispatched from this mailbox. ', verbose_name='Active')),
                ('username', models.CharField(max_length=75, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=75, null=True, verbose_name='Password')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('port', models.PositiveIntegerField(default=25, help_text='(465 with SSL)', verbose_name='Port')),
                ('last_polling', models.DateTimeField(blank=True, help_text='The time of last successful polling for messages.It is blank for new mailboxes and is not set for mailboxes that only receive messages via a pipe.', null=True, verbose_name='Last polling')),
                ('use_ssl', models.BooleanField(default=False, verbose_name='Use SSL')),
                ('mailbox', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pop3_mail_server', to='webmail.MailboxModel', verbose_name='Mailbox')),
            ],
            options={
                'verbose_name': 'Pop3 Mail Server',
                'verbose_name_plural': 'Pop3 Mail Servers',
                'db_table': 'webmail_pop3mailserver',
            },
        ),
        migrations.AddField(
            model_name='messagemodel',
            name='tags',
            field=models.ManyToManyField(to='webmail.TagModel'),
        ),
        migrations.CreateModel(
            name='MessageAttachmentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField(help_text='The original filename', verbose_name='File name')),
                ('mimetype', models.CharField(blank=True, default='', max_length=255)),
                ('file', models.FileField(upload_to=webmail.models.get_attachment_save_path, verbose_name='File')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='webmail.MessageModel', verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Message Attachment',
                'verbose_name_plural': 'Message Attachments',
                'db_table': 'webmail_messageattachment',
            },
        ),
        migrations.AddField(
            model_name='mailboxmodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mailboxes', to='webmail.WebmailUserModel'),
        ),
        migrations.CreateModel(
            name='AccessLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.TextField(editable=False, null=True, verbose_name='User Agent')),
                ('ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='IP Address')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date Last login')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='webmail.WebmailUserModel')),
            ],
            options={
                'verbose_name': 'Access log',
                'verbose_name_plural': 'Access logs',
                'db_table': 'webmail_accesslog',
                'ordering': ('date',),
            },
        ),
        migrations.AlterUniqueTogether(
            name='mailboxmodel',
            unique_together={('user', 'name')},
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayed_name', models.CharField(max_length=150, verbose_name='displayed name')),
                ('email', models.EmailField(max_length=150)),
                ('extra_data', webmail.fields.JSONField(blank=True, editable=False, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='modification date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='webmail.WebmailUserModel')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'webmail_contact',
                'ordering': ('displayed_name',),
                'unique_together': {('user', 'email')},
            },
        ),
    ]
